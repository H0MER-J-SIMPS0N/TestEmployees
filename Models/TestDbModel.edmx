<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="TestDbModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <Function Name="GetAllDepartments" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetAllEmployees" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetAllPositions" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetAllStatuses" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <Function Name="GetEmployeesByDepartmentId" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="departmentId" Type="int" Mode="In" />
        </Function>
        <Function Name="GetEmployeesByPartOfLastName" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="lastname" Type="nvarchar" Mode="In" />
        </Function>
        <Function Name="GetEmployeesByPositionId" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="positionId" Type="int" Mode="In" />
        </Function>
        <Function Name="GetEmployeesByStatusId" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="statusId" Type="int" Mode="In" />
        </Function>
        <EntityContainer Name="TestDbModelStoreContainer" />
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema Namespace="TestDbModel" Alias="Self" annotation:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
        <EntityContainer Name="TestDb" annotation:LazyLoadingEnabled="true" >
          <FunctionImport Name="GetAllDepartments" ReturnType="Collection(TestDbModel.Department)" />
          <FunctionImport Name="GetAllEmployees" ReturnType="Collection(TestDbModel.Employee)" />
          <FunctionImport Name="GetAllPositions" ReturnType="Collection(TestDbModel.Position)" />
          <FunctionImport Name="GetAllStatuses" ReturnType="Collection(TestDbModel.Status)" />
          <FunctionImport Name="GetEmployeesByDepartmentId" ReturnType="Collection(TestDbModel.Employee)">
          <Parameter Name="departmentId" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetEmployeesByPartOfLastName" ReturnType="Collection(TestDbModel.Employee)">
          <Parameter Name="lastname" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetEmployeesByPositionId" ReturnType="Collection(TestDbModel.Employee)">
          <Parameter Name="positionId" Mode="In" Type="Int32" />
          </FunctionImport>
          <FunctionImport Name="GetEmployeesByStatusId" ReturnType="Collection(TestDbModel.Employee)">
          <Parameter Name="statusId" Mode="In" Type="Int32" />
          </FunctionImport>
        </EntityContainer>
        <ComplexType Name="Department">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Name" Nullable="false" MaxLength="100" />
        </ComplexType>
        <ComplexType Name="Employee">
          <Property Type="String" Name="Status" Nullable="false" MaxLength="100" />
          <Property Type="String" Name="Department" Nullable="false" MaxLength="100" />
          <Property Type="String" Name="Position" Nullable="false" MaxLength="100" />
          <Property Type="String" Name="FirstName" Nullable="false" MaxLength="100" />
          <Property Type="String" Name="SecondName" Nullable="false" MaxLength="100" />
          <Property Type="String" Name="LastName" Nullable="false" MaxLength="100" />
          <Property Type="DateTime" Name="DateEmploy" Nullable="false" />
          <Property Type="DateTime" Name="DateUnemploy" Nullable="false" />
        </ComplexType>
        <ComplexType Name="Position">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Name" Nullable="false" MaxLength="100" />
        </ComplexType>
        <ComplexType Name="Status">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Name" Nullable="false" MaxLength="100" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
      <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
        <EntityContainerMapping StorageEntityContainer="TestDbModelStoreContainer" CdmEntityContainer="TestDb" >
          <FunctionImportMapping FunctionImportName="GetAllDepartments" FunctionName="TestDbModel.Store.GetAllDepartments">
            <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Department">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Name" ColumnName="Name" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetAllEmployees" FunctionName="TestDbModel.Store.GetAllEmployees">
            <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Employee">
                <ScalarProperty Name="Status" ColumnName="Status" />
                <ScalarProperty Name="Department" ColumnName="Department" />
                <ScalarProperty Name="Position" ColumnName="Position" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="SecondName" ColumnName="SecondName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetAllPositions" FunctionName="TestDbModel.Store.GetAllPositions">
            <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Position">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Name" ColumnName="Name" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetAllStatuses" FunctionName="TestDbModel.Store.GetAllStatuses">
            <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Status">
                <ScalarProperty Name="Id" ColumnName="Id" />
                <ScalarProperty Name="Name" ColumnName="Name" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetEmployeesByDepartmentId" FunctionName="TestDbModel.Store.GetEmployeesByDepartmentId">
          <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Employee">
                <ScalarProperty Name="Status" ColumnName="Status" />
                <ScalarProperty Name="Department" ColumnName="Department" />
                <ScalarProperty Name="Position" ColumnName="Position" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="SecondName" ColumnName="SecondName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetEmployeesByPartOfLastName" FunctionName="TestDbModel.Store.GetEmployeesByPartOfLastName">
          <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Employee">
                <ScalarProperty Name="Status" ColumnName="Status" />
                <ScalarProperty Name="Department" ColumnName="Department" />
                <ScalarProperty Name="Position" ColumnName="Position" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="SecondName" ColumnName="SecondName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetEmployeesByPositionId" FunctionName="TestDbModel.Store.GetEmployeesByPositionId">
          <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Employee">
                <ScalarProperty Name="Status" ColumnName="Status" />
                <ScalarProperty Name="Department" ColumnName="Department" />
                <ScalarProperty Name="Position" ColumnName="Position" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="SecondName" ColumnName="SecondName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="GetEmployeesByStatusId" FunctionName="TestDbModel.Store.GetEmployeesByStatusId">
          <ResultMapping>
              <ComplexTypeMapping TypeName="TestDbModel.Employee">
                <ScalarProperty Name="Status" ColumnName="Status" />
                <ScalarProperty Name="Department" ColumnName="Department" />
                <ScalarProperty Name="Position" ColumnName="Position" />
                <ScalarProperty Name="FirstName" ColumnName="FirstName" />
                <ScalarProperty Name="SecondName" ColumnName="SecondName" />
                <ScalarProperty Name="LastName" ColumnName="LastName" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
        </EntityContainerMapping>
      </Mapping>
    </edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </Connection>
    <Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="false" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="true" />
        <DesignerProperty Name="UseLegacyProvider" Value="false" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="None" />
      </DesignerInfoPropertySet>
    </Options>
    <!-- Diagram content (shape and connector positions) -->
    <Diagrams></Diagrams>
  </Designer>
</edmx:Edmx>